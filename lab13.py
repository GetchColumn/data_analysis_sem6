import numpy as np
import matplotlib.pyplot as plt  


def main():
    ## 1. Загрузка и отображение данных
    print('Загрузка и отображение данных')
    with open('ex8data1.npy', 'rb') as f:
        X = np.load(f)
        Xval = np.load(f)
        yval = np.load(f)
    draw_data(X)
    input('Перейдите в терминал и нажмите Enter для продолжения...')

    # Удалите следующую строку для продолжения работы
    return

    ## 2. Оценивание параметров распределений
    print('\nОценивание параметров нормального распределения')
    mu, sigma2 = estimate_gaussian(X)
    print('Полученный вектор матожидания:', mu)
    print('Ожидаемое значение (приближенно): [14.112 14.998]')
    print('Полученный вектор дисперсии:', sigma2)
    print('Ожидаемое значение (приближенно): [1.833 1.710]')
    input('Перейдите в терминал и нажмите Enter для продолжения...')

    # Удалите следующую строку для продолжения работы
    return

    ## 3. Модель многомерного распределения
    print('\nМодель многомерного нормального распределения')
    pval = multivariate_gaussian(Xval, mu, sigma2)
    print('Первых пять значений:', pval[:5])
    print('Ожидаемые значения (приближенно): [0.042 0.082 0.041 0.062 0.0712]')
    input('Перейдите в терминал и нажмите Enter для продолжения...')

    # Удалите следующую строку для продолжения работы
    return

    ## 4. Выбор порога
    print('\nВыбор порога обнаружения аномалий')
    epsilon, F1 = select_threshold(yval, pval)
    print('Полученное значение порога:', epsilon)
    print('Ожидаемое значение (приближенно): 0.00009')
    print('Полученное значение F1-меры:', F1)
    print('Ожидаемое значение (приближенно): 0.875')
    input('Перейдите в терминал и нажмите Enter для продолжения...')

    # Удалите следующую строку для продолжения работы
    return

    ## 5. Отображение
    print('\nОтображение выборки с распределением и найденными аномалиями')
    draw_data_and_fit(X, mu, sigma2, epsilon)
    input('Перейдите в терминал и нажмите Enter для продолжения...')

    # Удалите следующую строку для продолжения работы
    return

    ## 6. Проверка на наборе данных с большим числом параметров
    print('\nПроверка на наборе данных с большим числом параметров')
    with open('ex8data2.npy', 'rb') as f:
        X = np.load(f)
        Xval = np.load(f)
        yval = np.load(f)
    mu, sigma2 = estimate_gaussian(X)
    pval = multivariate_gaussian(Xval, mu, sigma2)
    epsilon, F1 = select_threshold(yval, pval)
    print('Полученное значение порога:', epsilon)
    print('Ожидаемое значение (приближенно): 1.3786e-18')
    print('Полученное значение F1-меры:', F1)
    print('Ожидаемое значение (приближенно): 0.61538')
    print('Найдено аномалий:', sum(pval < epsilon))

    ## Конец работы


# Отображение выборки
def draw_data(X):
    plt.figure()
    # ------ добавьте свой код --------
    # ...
    # ---------------------------------
    plt.show()


# Оценивание параметров Гауссовского распределения    
def estimate_gaussian(X):
    m, n = X.shape
    mu = np.zeros(n)
    sigma2 = np.zeros(n)
    # ------ добавьте свой код --------
    # ...
    # ---------------------------------
    return mu, sigma2


# Расчет оценки многомерного распределения
def multivariate_gaussian(X, mu, sigma2):
    m, n = X.shape
    p = np.zeros(m, dtype=int)
    # ------ добавьте свой код --------
    # ...
    # ---------------------------------
    return p


# Выбор значения порога
def select_threshold(yval, pval):
    eps = 0
    F1 = 0
    # ------ добавьте свой код --------
    # ...
    # ---------------------------------
    return eps, F1


# Отображение выборки с графиком распределения
def draw_data_and_fit(X, mu, sigma2, epsilon):
    plt.figure()
    # ------ добавьте свой код --------
    # ...
    # ---------------------------------
    plt.show()


if __name__ == '__main__':
    plt.ion()
    main()
    input('Перейдите в терминал и нажмите Enter для завершения')
    plt.clf()
